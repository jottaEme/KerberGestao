@using KerberGestaoRegraDeNegocio.Models.Dtos
@model AlterarSenhaDto
@{
    ViewData["Title"] = "Alterar senha do Usuário ";
}
<div class="text-center">
    <h1 class="display-4">Alterar senha do Usuário</h1>
</div>

@if (TempData["MensagemSucesso"] != null)
{
        <div class="alert alert-success" role="alert">
            <button type="button" class="btn btn-outline-danger btn-sm close-alert" arial-label="Close">x</button>
            @TempData["MensagemSucesso"]
        </div>
}

@if (TempData["MensagemErro"] != null)
{
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-outline-danger btn-sm close-alert" arial-label="Close">x</button>
            @TempData["MensagemErro"]
        </div>
}

<form asp-controller="AlterarSenha" asp-action="Alterar" method="post">
    <div class="form-group">
        <label for="senhaAtual">Senha Atual</label>
        <input type="password" asp-for="SenhaAtual" class="form-control" placeholder="Digite a senha atual">
        @Html.ValidationMessageFor(x => x.SenhaAtual)
    </div>
    <div class="form-group">
    <label for="novaSenha">Nova Senha</label>
        <input type="password" asp-for="NovaSenha" class="form-control" placeholder="Digite a nova senha">
        @Html.ValidationMessageFor(x => x.NovaSenha)
    </div>
    <div class="form-group">
        <label for="confirmarNovaSenha">Confirmar Nova Senha</label>
        <input type="password" asp-for="ConfirmarNovaSenha" class="form-control" placeholder="Digite a confirmação da nova senha">
        @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
    </div>
    <br />
    <button type="submit" class="btn btn-outline-success btn-block">Alterar</button>
    <a class="btn btn-outline-dark btn-block" asp-controller="Home" asp-action="Index" role="button">Voltar</a>
</form>



